"""add all model in invoices

Revision ID: 17dbbd1fe84d
Revises: cd84c3b91739
Create Date: 2023-12-14 15:48:43.948102

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "17dbbd1fe84d"
down_revision: Union[str, None] = "cd84c3b91739"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users_address",
        sa.Column(
            "id",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("city", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
        sa.Column(
            "state", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False
        ),
        sa.Column(
            "address", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users_user.id"],
            name=op.f("fk_users_address_user_id_users_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users_address")),
        sa.UniqueConstraint("id", name=op.f("uq_users_address_id")),
    )
    op.create_unique_constraint(
        op.f("uq_invoices_invoice_id"), "invoices_invoice", ["id"]
    )
    op.create_unique_constraint(
        op.f("uq_invoices_invoiceItem_id"), "invoices_invoiceItem", ["id"]
    )
    op.create_unique_constraint(
        op.f("uq_products_product_id"), "products_product", ["id"]
    )
    op.create_unique_constraint(op.f("uq_users_user_id"), "users_user", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_users_user_id"), "users_user", type_="unique")
    op.drop_constraint(
        op.f("uq_products_product_id"), "products_product", type_="unique"
    )
    op.drop_constraint(
        op.f("uq_invoices_invoiceItem_id"), "invoices_invoiceItem", type_="unique"
    )
    op.drop_constraint(
        op.f("uq_invoices_invoice_id"), "invoices_invoice", type_="unique"
    )
    op.drop_table("users_address")
    # ### end Alembic commands ###
